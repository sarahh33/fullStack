{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["url","axios","get","newRecord","post","id","delete","put","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Person","person","deletRecord","name","number","onClick","window","confirm","Filter","value","handle","onChange","PersonForm","add","valueNum","valueName","handleName","handleNum","onSubmit","type","App","useState","persons","setPersons","newName","setNewName","newNum","setNewNum","searchName","setSearch","errorMessage","setErrorMessage","useEffect","console","log","personService","then","response","data","personToShow","filter","toLowerCase","event","target","preventDefault","setTimeout","some","n","map","concat","catch","error","i","find","ReactDOM","render","notes","content","date","important","document","getElementById"],"mappings":"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","file":"static/js/main.2837f9ea.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst url= '/api/persons'\r\n\r\nconst getAll =()=>{\r\n    return axios.get(url)\r\n}\r\n\r\nconst update=newRecord=>{\r\n    return axios.post(url,newRecord)\r\n}\r\n\r\n\r\n\r\nconst updateOld = (id,newRecord) => {\r\n    \r\n    return axios.put(`${url}/${id}`, newRecord)\r\n  }\r\n\r\nconst delet=id=>{    \r\n    return axios.delete(`${url}/${id}`)\r\n    \r\n}\r\n\r\n\r\n\r\nexport default{\r\n    getAll:getAll,\r\n    update:update,\r\n    delet:delet,\r\n    updateOld:updateOld\r\n}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport personService from './services/persons'\r\n\r\nconst Notification=({message})=>{\r\n  const notiStyle={\r\n    color: 'green',\r\n  background: 'lightgrey',\r\n  fontSize: 20,\r\n  borderStyle: 'solid',\r\n  borderRadius: 5,\r\n  padding: 10,\r\n  marginBottom: 10,\r\n  }\r\n  if (message ===null){\r\n    return null\r\n  }\r\n  return (\r\n    <div style={notiStyle}>{message}</div>\r\n  )\r\n\r\n}\r\n\r\nconst Person = ({ person,deletRecord }) => {\r\n  return (\r\n    <li>{person.name} {person.number}\r\n    <button onClick={()=>{if (window.confirm(`Delete ${person.name}?`)) {deletRecord()\r\n}}}>delet</button></li>\r\n  )\r\n}\r\nconst Filter = ({ value, handle }) => {\r\n  return (\r\n    <form>\r\n      <div>filter shown with</div>\r\n      <input value={value} onChange={handle} />\r\n    </form>)\r\n}\r\n\r\nconst PersonForm = ({ add, valueNum, valueName, handleName, handleNum }) => {\r\n  return (\r\n    <form onSubmit={add}>\r\n      <div>\r\n        name: <input value={valueName} onChange={handleName} />\r\n      </div>\r\n      <div>number: <input value={valueNum} onChange={handleNum} /></div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n}\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNum, setNewNum] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [searchName, setSearch] = useState('')\r\n  const [errorMessage, setErrorMessage]= useState('something wrong happens')\r\n  const [nameIsValid, setValid]= useState(true)\r\n\r\n  useEffect(()=>{\r\n    console.log('effect')\r\n    personService\r\n    .getAll()\r\n    .then(response=>{setPersons(response.data)})\r\n   \r\n  },[])\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n    const newRecord = {\r\n      name: newName,\r\n      number: newNum\r\n    }\r\n\r\n    if (newRecord.name <4 || newRecord.number<9){\r\n      setErrorMessage('content length is not ok')\r\n      setTimeout(()=>{\r\n        setErrorMessage(null)\r\n      },5000)\r\n    }\r\n    else if (persons.some(person => person.name === newRecord.name)){\r\n      if (window.confirm(newName + ' is already added to phonebook, replace the old number with a new one?')) {\r\n        \r\n        personService\r\n        .updateOld(personToShow.filter(n=> n.name===newRecord.name)[0].id,newRecord)\r\n        .then(response=>{setPersons(personToShow.map(person=> person.name!==newRecord.name\r\n          ?person\r\n          :response.data\r\n          ))})\r\n        \r\n        setErrorMessage(`'${newName}' was updated`)\r\n        setTimeout(()=>{\r\n          setErrorMessage(null)\r\n        },5000)\r\n        \r\n      }} \r\n    \r\n\r\n    else {\r\n      personService\r\n      .update(newRecord)\r\n      .then(response=>{setPersons(personToShow.concat(response.data))})\r\n      .catch(error => {console.log(error.response.data)})\r\n      setErrorMessage(`'${newName}' was added`)\r\n        setTimeout(()=>{\r\n          setErrorMessage(null)\r\n        },5000)\r\n    }\r\n    setNewName('')\r\n    setNewNum('')\r\n  }\r\n\r\n  const handleNameChange = (event) => setNewName(event.target.value)\r\n  const handleNumChange = (event) => setNewNum(event.target.value)\r\n  const handleSearch = (event) =>setSearch(event.target.value)\r\n\r\n  const deletRecordOf =(id)=>{\r\n    \r\n    const person = personToShow.find(n=> n.id===id)\r\n    console.log(id)\r\n    \r\n    personService\r\n    .delet(id)\r\n    personService\r\n    .getAll()\r\n    .then(response=> {setPersons(response.data)}) \r\n    \r\n\r\n  }\r\n  \r\n  const personToShow = (searchName == '')\r\n    ? persons\r\n    : persons.filter(person => person.name.toLowerCase() == searchName.toLowerCase())\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message= {errorMessage}/>\r\n      <Filter value={searchName} handle={handleSearch} />\r\n\r\n      <h3>add a new</h3>\r\n      <PersonForm add={addName} valueName={newName} handleName={handleNameChange} valueNum={newNum} handleNum={handleNumChange} />\r\n\r\n      <h3>Numbers</h3>\r\n      \r\n       {personToShow.map((person, i) => <Person key={i} person={person} deletRecord={()=>deletRecordOf(person.id)} />)}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\n\r\nconst notes = [\r\n  {\r\n    id: 1,\r\n    content: 'HTML is easy',\r\n    date: '2019-05-30T17:30:31.098Z',\r\n    important: true\r\n  },\r\n  {\r\n    id: 2,\r\n    content: 'Browser can execute only JavaScript',\r\n    date: '2019-05-30T18:39:34.091Z',\r\n    important: false\r\n  },\r\n  {\r\n    id: 3,\r\n    content: 'GET and POST are the most important methods of HTTP protocol',\r\n    date: '2019-05-30T19:20:14.298Z',\r\n    important: true\r\n  }\r\n]\r\n\r\nReactDOM.render(\r\n  <App notes={notes} />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}