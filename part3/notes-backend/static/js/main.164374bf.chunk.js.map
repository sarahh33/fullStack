{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","noteToShow","filter","map","i","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","retrunedNote","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.164374bf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important '\r\n    : 'make important'\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick ={toggleImportance}>{label}</button></li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/notes'\r\n\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n      id: 10000,\r\n      content: 'This note is not saved to server',\r\n      date: '2019-05-30T17:30:31.098Z',\r\n      important: true,\r\n    }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n  }\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return (\r\n      request.then(response => response.data)\r\n      \r\n   )\r\n}\r\n\r\nexport default { \r\n  getAll: getAll, \r\n  create: create, \r\n  update: update \r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Note from './components/Note'\r\nimport noteService from \"./services/notes\";\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Footer =()=>{\r\n  const footerStyle={\r\n    color:'green',\r\n    fontStyle:'italic',\r\n    fontSize:16\r\n  }\r\n  return(\r\n    <div style={footerStyle}><br />\r\n    <em>Note app, Department of Computer Science, University of Helsinki 2021</em></div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState(\r\n    'a new note ...'\r\n  )\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage]=useState('some error happened')\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n  console.log('render', notes.length, 'notes')\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString,\r\n      important: Math.random() < 0.5,\r\n      id: notes.length + 1,\r\n    }\r\n    noteService\r\n      .create(noteObject)\r\n      .then(retrunedNote => {\r\n        setNotes(notes.concat(retrunedNote))\r\n        setNewNote('')\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n\r\n\r\n\r\n  const noteToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important === true)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message ={errorMessage}/>\r\n      <div><button onClick={() => setShowAll(!showAll)}>\r\n        show {showAll ? 'important' : 'all'}</button></div>\r\n      <ul>\r\n        {noteToShow.map((note, i) =>\r\n          <Note\r\n            key={i}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type='submit'>save</button></form>\r\n        <Footer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}